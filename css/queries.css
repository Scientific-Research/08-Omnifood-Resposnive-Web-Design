/* rem and em in media queries do NOT depend on html font-size setting in html. It means, 1rem = 1em will not be 10px anymore and it will be 16px as default value in the Browser!
INSTEAD, 1rem = 1em = 16px*/
/* rem is root font-size and 
em is current font-size - BUT WE TAKE BOTH OF THEM HERE AS EQUAL AND USE EM AND NOT REM - BECAUSE SOME OF THE BROWSERS HAVE BUGS WHEN WE USE MEDIA QUERIES, THAT'S WHY REM DOESN'T WORK WELL HERE! */

/******************************************/
/*BELOW 1344px (Smaller desktops)*/
/******************************************/
/* 1344px / 16px = 84em => our first breakpoint */
@media (max-width: 84em) {
  /* Our very first CSS Rule in MEDIA QUERY: 
  CHANGE THE MAX-WIDTH TO 1200px INSTEAD OF 1300px - WITH 1200px THE HERO SECTION AND NEXT SECTION ARE ALIGNED GOOD TOGETHER!*/
  .hero {
    max-width: 120rem;
  }

  .heading-primary {
    /* We make the font-size a little bit smaller to stay still in 3 line instead of 4 lines!*/
    font-size: 4.4rem;
  }

  /* changing the column from three to two columns in 1344px or lower!*/
  .gallery {
    grid-template-columns: repeat(2, 1fr);
  }
}

/*  A NEW MEDIA QUERY FOR 1200px => 1200px / 16 = 75em */
/******************************************/
/*BELOW 1200px (Tablets in Landscape mode and not in Portrait mode!)*/
/******************************************/
@media (max-width: 75em) {
  html {
    /* we want here to make everything smaller just one pixel, we change the font-size from 10px to 9px */
    /* 9px / 16px = 0.5625 * 100 = 56.25% => 56.25% is 9px */
    font-size: 56.25%;
  }

  /* to decrease the grid gap in entire page where grid layout is available!*/
  .grid {
    column-gap: 4.8rem;
    row-gap: 6.4rem;
  }

  .heading-secondary {
    font-size: 3.6rem;
  }

  .heading-tertiary {
    font-size: 2.4rem;
  }

  /*  to be aligned with heading-primary */
  .header {
    padding: 0 3.2rem;
  }

  /* to decrease the distance between woman-image in hero section and the texts in the left side!*/
  .hero {
    gap: 4.8rem;
  }

  /* Change the space between the items in nav like How it works, Meals, ... */
  .main-nav-list {
    gap: 3.2rem;
  }

  /* To reduce only right and left paddings for testimonial texts to have more space and the texts will be maximum in four lines and not more => and so looks good! */
  .testimonials-container {
    padding: 9.6rem 3.2rem;
  }
}

/******************************************/
/*BELOW 944px (Tablets in Landscape mode and not in Portrait mode!)*/
/******************************************/
/* 944px / 16 = 59em*/
@media (max-width: 59em) {
  html {
    /* we want here to make everything smaller just one pixel, we change the font-size from 10px to 9px */
    /* 8px / 16px = 0.5 * 100 = 50% => 50% is 8px */
    font-size: 50%;
  }

  /* we make the entire hero only one column for 944px and below that! */
  .hero {
    grid-template-columns: 1fr;
    padding: 0 8rem;
    gap: 6.4rem;
  }

  /* TEXT IS AN INLINE ELEMENT AND WE CAN CENTER TEXT WITH text-align: center; */
  .hero-text-box {
    text-align: center;
  }

  /* IMAGE LIKE TEXT IS AN INLINE ELEMENT AND WE CAN CENTER IT USING THE SAME ABOVE SATEMENT:  text-align: center; */
  .hero-image-box {
    text-align: center;
  }

  /* We have to make the hero image smaller! */
  .hero-img {
    width: 60%; /*get the complete width of its parent(hero-image-box) which is a complete GRID cell.*/
  }

  /* delivered-meals class is a flex item and using text-align: center; doesn't work for that because it is not a inline element, rather it is a flex item and to center a flex item, we have to use the justify-content: center; */
  .delivered-meals {
    justify-content: center;
    margin-top: 3.2rem;
  }

  .logos img {
    height: 2.4rem;
  }

  .step-number {
    font-size: 7.4rem;
  }

  .meal-content {
    padding: 2.4rem 3.2rem 3.2rem 3.2rem;
  }

  .gallery {
    grid-template-columns: repeat(6, 1fr);
  }

  .section-testimonials {
    grid-template-columns: 1fr;
  }

  /* 3/5 = 60% + 2/5 = 40% */
  .cta {
    grid-template-columns: 3fr 2fr;
  }

  .cta-form {
    grid-template-columns: 1fr;
  }

  .btn--form {
    margin-top: 1.2rem;
  }

  /* MOBILE NAVIGATION SECTION */
  /* ONCE WE REACH THIS MEDIA QUERY(944px AND UNDER THAT), WE HAVE TO SHOW THIS BUTTON*/
  .btn-mobile-nav {
    display: block;
  }

  .main-nav {
    background-color: rgba(255, 255, 255, 0.97);
    /* The parent has to be positioned as relative => The parent is header, but we want that to be displayed in entire page, that's why the parent would be entire view port => that's why we don't need to specify the parent and when i specify that, that i did already in header class, but i commented it out already => the result will not change and will stay the same!*/

    /* THE THREE ROUTINE STAMENETS THAT WE NEED ALWAYS TO DO THE ABSOLUTE POSITIONING:*/
    position: absolute;
    top: 0;
    left: 0;

    /* width: 100%; OR*/
    width: 100vw; /*entire view port width => it covers only the entire width of the current page that i see now on the monitor!*/
    height: 100vh; /*entire view port height => it covers only the entire height of the current page that i see now on the monitor!*/

    /*  Center the item on the white page using flex page, otherwise the items stay top left*/
    display: flex;
    align-items: center;
    justify-content: center;
  }

  /* the display in this class was already set to flex, but we want to display the content vertically in 944px and below that, that's why we have to change the flex-direction to column and bring back the gap to 4.8rem!*/
  .main-nav-list {
    flex-direction: column;
    gap: 4.8rem;
  }

  .main-nav-link:link,
  .main-nav-link:visited {
    font-size: 3rem;
  }
}

/* - Font sizes (px):
10 / 12 / 14 / 16 / 18 / 20 / 24 / 30 / 36 / 44 / 52 / 62 / 74 / 86 / 98 

- Spacing System (px)
2 / 4 / 8 / 12 / 16 / 24 / 32 / 48 / 64 / 80 / 96 / 128 */
